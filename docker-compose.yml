version: '3'
services:
  db:
    image: postgis/postgis
    environment:
      POSTGRES_DB: seating
      POSTGRES_PASSWORD: secret
  backend:
    depends_on: [db, frontend] # TODO wait for these to become available
    build:
      context: backend
      dockerfile: Dockerfile.dev
    ports: ['8080:8080']
    environment:
      DB_URL: postgres://postgres:secret@db:5432/seating
    volumes:
      - ./backend:/usr/src/app
      - ./frontend/static:/usr/src/app/static
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    ports: ['8081:8081']
    env_file: [.env]
    volumes:
      # need to manually exclude node_modules, as it contains platform-specific binaries
      - ./frontend/src:/usr/src/app/src
      - ./frontend/static:/usr/src/app/static
      - ./frontend/.babelrc:/usr/src/app/.babelrc
      - ./frontend/package-lock.json:/usr/src/app/package-lock.json
      - ./frontend/package.json:/usr/src/app/package.json
      - ./frontend/webpack.config.js:/usr/src/app/webpack.config.js
